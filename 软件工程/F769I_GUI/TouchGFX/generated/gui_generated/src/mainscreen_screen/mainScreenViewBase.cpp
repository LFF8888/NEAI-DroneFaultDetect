/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/mainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

mainScreenViewBase::mainScreenViewBase() :
    buttonCallback(this, &mainScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    backGround.setPosition(0, 0, 800, 480);
    backGround.setColor(touchgfx::Color::getColorFromRGB(227, 234, 241));
    add(backGround);

    backPicture.setXY(0, 0);
    backPicture.setBitmap(touchgfx::Bitmap(BITMAP_PLANE_ID));
    add(backPicture);

    link_img.setXY(650, 258);
    link_img.setBitmap(touchgfx::Bitmap(BITMAP_STATE_ID));
    add(link_img);

    rssi_img.setXY(486, 253);
    rssi_img.setBitmap(touchgfx::Bitmap(BITMAP_RSSI_ID));
    add(rssi_img);

    line.setPosition(486, 173, 6, 30);
    line.setColor(touchgfx::Color::getColorFromRGB(128, 128, 128));
    add(line);

    link.setXY(690, 252);
    link.setColor(touchgfx::Color::getColorFromRGB(158, 158, 158));
    link.setLinespacing(0);
    link.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I1KO));
    add(link);

    status.setXY(649, 218);
    status.setColor(touchgfx::Color::getColorFromRGB(84, 84, 84));
    status.setLinespacing(0);
    status.setTypedText(touchgfx::TypedText(T___SINGLEUSE_60YG));
    add(status);

    RSSI.setXY(485, 218);
    RSSI.setColor(touchgfx::Color::getColorFromRGB(84, 84, 84));
    RSSI.setLinespacing(0);
    RSSI.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BS2W));
    add(RSSI);

    dbm3.setXY(525, 252);
    dbm3.setColor(touchgfx::Color::getColorFromRGB(158, 158, 158));
    dbm3.setLinespacing(0);
    dbm3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P5ZP));
    add(dbm3);

    dbm2.setXY(521, 252);
    dbm2.setColor(touchgfx::Color::getColorFromRGB(158, 158, 158));
    dbm2.setLinespacing(0);
    dbm2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9M9A));
    add(dbm2);

    dbm1.setXY(525, 252);
    dbm1.setColor(touchgfx::Color::getColorFromRGB(158, 158, 158));
    dbm1.setLinespacing(0);
    dbm1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BWHC));
    add(dbm1);

    name.setXY(497, 170);
    name.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    name.setLinespacing(0);
    name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JEQJ));
    add(name);

    lockNote.setXY(337, 269);
    lockNote.setColor(touchgfx::Color::getColorFromRGB(128, 128, 128));
    lockNote.setLinespacing(0);
    lockNote.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7R5X));
    lockNote.setAlpha(0);
    add(lockNote);

    about.setXY(598, 369);
    about.setBitmaps(touchgfx::Bitmap(BITMAP_B1_ID), touchgfx::Bitmap(BITMAP_A1_ID));
    about.setLabelText(touchgfx::TypedText(T___SINGLEUSE_RJO1));
    about.setLabelColor(touchgfx::Color::getColorFromRGB(153, 153, 153));
    about.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    about.setAction(buttonCallback);
    add(about);

    bat.setXY(416, 369);
    bat.setBitmaps(touchgfx::Bitmap(BITMAP_B5_ID), touchgfx::Bitmap(BITMAP_A5_ID));
    bat.setLabelText(touchgfx::TypedText(T___SINGLEUSE_BTWS));
    bat.setLabelColor(touchgfx::Color::getColorFromRGB(153, 153, 153));
    bat.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    bat.setAction(buttonCallback);
    add(bat);

    home.setXY(50, 368);
    home.setBitmaps(touchgfx::Bitmap(BITMAP_C1_ID), touchgfx::Bitmap(BITMAP_A4_ID));
    home.setLabelText(touchgfx::TypedText(T___SINGLEUSE_I6WS));
    home.setLabelColor(touchgfx::Color::getColorFromRGB(153, 153, 153));
    home.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(home);

    start.setXY(235, 369);
    start.setBitmaps(touchgfx::Bitmap(BITMAP_B2_ID), touchgfx::Bitmap(BITMAP_A2_ID));
    start.setLabelText(touchgfx::TypedText(T___SINGLEUSE_XWVE));
    start.setLabelColor(touchgfx::Color::getColorFromRGB(153, 153, 153));
    start.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    start.setAction(buttonCallback);
    add(start);

    disconnet.setXY(650, 286);
    disconnet.setBitmaps(touchgfx::Bitmap(BITMAP_RED1_ID), touchgfx::Bitmap(BITMAP_RED2_ID));
    disconnet.setLabelText(touchgfx::TypedText(T___SINGLEUSE_NU2D));
    disconnet.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    disconnet.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(disconnet);

    refreash.setXY(486, 286);
    refreash.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE1_ID), touchgfx::Bitmap(BITMAP_BLUE2_ID));
    refreash.setLabelText(touchgfx::TypedText(T___SINGLEUSE_HY2O));
    refreash.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    refreash.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    refreash.setAction(buttonCallback);
    add(refreash);

    smallLock.setXY(270, 256);
    smallLock.setBitmaps(touchgfx::Bitmap(BITMAP_RELOCK_ID), touchgfx::Bitmap(BITMAP_RELOCK_ID));
    smallLock.setAlpha(0);
    smallLock.setAction(buttonCallback);
    add(smallLock);
}

mainScreenViewBase::~mainScreenViewBase()
{

}

void mainScreenViewBase::setupScreen()
{
    transitionBegins();
}

void mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &about)
    {
        //about
        //When about clicked change screen to aboutScreen
        //Go to aboutScreen with screen transition towards East
        application().gotoaboutScreenScreenCoverTransitionEast();
    }
    if (&src == &bat)
    {
        //bat
        //When bat clicked change screen to batScreen
        //Go to batScreen with screen transition towards East
        application().gotobatScreenScreenCoverTransitionEast();
    }
    if (&src == &start)
    {
        //start
        //When start clicked change screen to startScreen
        //Go to startScreen with screen transition towards East
        application().gotostartScreenScreenCoverTransitionEast();
    }
    if (&src == &refreash)
    {
        //changedbm
        //When refreash clicked execute C++ code
        //Execute C++ code
        if(dbm1.isVisible()){
            dbm1.setVisible(0);
            dbm2.setVisible(1);
        }
        else if(dbm2.isVisible()){
            dbm2.setVisible(0);
            dbm3.setVisible(1);
        }
        else if(dbm3.isVisible()){
            dbm3.setVisible(0);
            dbm1.setVisible(1);
        }
        dbm1.invalidate();
    }
    if (&src == &smallLock)
    {
        //fadeLockButton
        //When smallLock clicked fade smallLock
        //Set alpha to 0 on smallLock
        smallLock.setAlpha(0);
        smallLock.invalidate();
    
        //lockScreen
        //When fadeLockButton completed change screen to lockScreen
        //Go to lockScreen with no screen transition
        application().gotolockScreenScreenNoTransition();
    }
}

void mainScreenViewBase::transitionBegins()
{
    //dbmInit
    //When screen transition begins execute C++ code
    //Execute C++ code
    dbm1.setVisible(1);
    dbm2.setVisible(0);
    dbm3.setVisible(0);

    //showSmallLockButton
    //When screen transition begins fade smallLock
    //Fade smallLock to alpha:255 with LinearIn easing in 600 ms (36 Ticks)
    smallLock.clearFadeAnimationEndedAction();
    smallLock.startFadeAnimation(255, 36, touchgfx::EasingEquations::linearEaseIn);

    //showLockNote
    //When screen transition begins fade lockNote
    //Fade lockNote to alpha:255 with LinearIn easing in 600 ms (36 Ticks)
    lockNote.clearFadeAnimationEndedAction();
    lockNote.setFadeAnimationDelay(18);
    lockNote.startFadeAnimation(255, 36, touchgfx::EasingEquations::linearEaseIn);
}
