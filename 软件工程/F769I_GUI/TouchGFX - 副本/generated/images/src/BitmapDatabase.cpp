// 4.21.4 0x56f8e511
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_36_large_round_active[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_LARGE_ROUND_ACTIVE_ID = 0, Size: 290x36 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_36_large_round_disabled[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_LARGE_ROUND_DISABLED_ID = 1, Size: 290x36 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_60_medium_round_action[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_MEDIUM_ROUND_ACTION_ID = 2, Size: 312x60 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_60_small_round_active[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUND_ACTIVE_ID = 3, Size: 228x60 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_60_small_round_disabled[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUND_DISABLED_ID = 4, Size: 228x60 pixels
extern const unsigned char image_alternate_theme_images_widgets_gauge_large_backgrounds_dark_filled[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_LARGE_BACKGROUNDS_DARK_FILLED_ID = 5, Size: 336x336 pixels
extern const unsigned char image_alternate_theme_images_widgets_gauge_large_fillers_swoop[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_LARGE_FILLERS_SWOOP_ID = 6, Size: 270x199 pixels
extern const unsigned char image_alternate_theme_images_widgets_gauge_large_needles_rough[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_LARGE_NEEDLES_ROUGH_ID = 7, Size: 30x111 pixels
extern const unsigned char image_alternate_theme_images_widgets_radiobutton_check_large_rounded_on_active[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_LARGE_ROUNDED_ON_ACTIVE_ID = 8, Size: 50x50 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_widgets_button_regular_height_36_large_round_active, 0, 290, 36, 17, 0, 256, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_36_large_round_disabled, 0, 290, 36, 17, 0, 256, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_60_medium_round_action, 0, 312, 60, 22, 1, 268, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 58, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_60_small_round_active, 0, 228, 60, 22, 1, 184, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 58, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_60_small_round_disabled, 0, 228, 60, 22, 1, 184, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 58, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_gauge_large_backgrounds_dark_filled, 0, 336, 336, 50, 49, 236, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 238, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_gauge_large_fillers_swoop, 0, 270, 199, 155, 5, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_gauge_large_needles_rough, 0, 30, 111, 10, 37, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 53, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_radiobutton_check_large_rounded_on_active, 0, 50, 50, 3, 2, 44, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 46, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
